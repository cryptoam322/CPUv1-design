Operations:
-MATH:
--ADD
--SUB
-BITWISE:
--NOT
--AND
--OR
--SHIFT
-CONTROL:
--JMP
--JIE
--JNE
-MEM:
--SET HIGH
--SET LOW
--CPY
-INTERNAL:
--NOP
n/a
Definitions:
-ADD a b c
Takes input from a and b, adds them together(no overflow handling) and sends to b
-SUB a b c
Takes input from a and b, subtracts them(a-b) assuming both are in two's complement form and sends
to b
-NOT a b
Takes input from a, inverts and sends to b
-AND a b c
Takes input from a and b, does bitwise AND on all bits and sends to b
-OR a b c
Takes input from a and b, does bitwise OR on all bits and sends to b
-SHIFT a b c
Takes input from a and b, shifts a by b bits with a circular shift(modulo amt of bits in relevant 
register/address as defined in the cpu design) and sends to b
-JMP a
Sets instruction pointer to address at a
-JIE a b c
If inputs from a and b are equal, jump to address at c
-JNE a b c
If inputs from a and b are not equal, jump to address at c
-SET HIGH ARGUEMENT
Sets special scratchpad register higher half to the arguement(preserves lower half)
-SET LOW ARGUEMENT
Sets special scratchpad register lower half to the arguement(preserves higher half)
-CPY a b
Copies input from a to address/reg at b
-NOP
No operation(eg move to next instruction)
Design:
-address and instruction width is 64 bits
-big endian(eg 1234 will be in memory as 1234 instead of 2143 or 4321)
-no interrupts
-no special memory management
Instruction Format:
|X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X|X|X|X|X X X X X|X X X X X X X X|X X X X X X X X|X X X X X X X X|
|                                                            64 BITS                                                            |
|                          32 BITS                              |                          32 BITS                              |
|                        INSTRUCTION                            |                         ARGUEMENT                             |
|                        INSTRUCTION                            |A|B|C|RESERVED |     A_REG     |     B_REG     |     C_REG     |
*A,B,C bits control whether the register is treated as a target or as a pointer to a address in memory
Registers:
-PC:Program counter
-GP_1:General purpose register 1
-GP_2:General purpose register 2
-GP_3:General purpose register 3
-GP_4:General purpose register 4
-GP_5:General purpose register 5
-GP_6:General purpose register 6
-GP_7:General purpose register 7
-GP_8:General purpose register 8
-GP_9:General purpose register 9
-GP_10:General purpose register 10
-GP_11:General purpose register 11
-GP_12:General purpose register 12
-GP_13:General purpose register 13
-GP_14:General purpose register 14
-GP_15:General purpose register 15
-GP_16:General purpose register 16
-SP:Scratchpad
Register types:
-PC:Controls which address in memory the cpu is currently executing(at the start of the cycle)
-GP_1 to GP_16: General purpose registers with no special functions
-SP:Scratchpad register. Gets written to by SET HIGH and SET LOW









